# -*- coding: utf-8 -*-
"""sdr.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16fFjArLFBpvYCuPRtIS0gNJ7MW54bHht
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report
import matplotlib.pyplot as plt

# Load the data
train_df = pd.read_csv("/train.csv")
test_df = pd.read_csv("/test.csv")

# Convert the 'label' column to categorical (factor)
train_df['label'] = train_df['label'].astype('category')
test_df['label'] = test_df['label'].astype('category')

# Separate features (X) and target (y)
X_train = train_df.drop('label', axis=1)
y_train = train_df['label']
X_test = test_df.drop('label', axis=1)
y_test = test_df['label']

# Create and train the Decision Tree model
model = DecisionTreeClassifier()
model.fit(X_train, y_train)

import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

# Assuming you have your model, X_train, and y_train already defined
# and model is already fit.

plt.figure(figsize=(20, 10))
plot_tree(model, filled=True, feature_names=X_train.columns, class_names=[str(c) for c in model.classes_])
plt.show()

# Make predictions on the test set
predictions = model.predict(X_test)

# Calculate and print the confusion matrix
cm = confusion_matrix(y_test, predictions)
print("Confusion Matrix:")
print(cm)